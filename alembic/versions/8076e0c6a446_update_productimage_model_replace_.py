"""Update ProductImage model, replace created_at and updated_at with is_primary and upload_date

Revision ID: 8076e0c6a446
Revises: d0ada903987e
Create Date: 2025-05-11 05:16:50.646934

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8076e0c6a446'
down_revision = 'd0ada903987e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Skip ProductImage modifications as they've already been done manually

    # Create new tables
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('card_holder_name', sa.String(length=50), nullable=False),
    sa.Column('card_number', sa.String(length=50), nullable=False),
    sa.Column('expiry_month', sa.Integer(), nullable=False),
    sa.Column('expiry_year', sa.Integer(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cards_id'), 'cards', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('idempotency_key', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)

    # First drop foreign key constraints for stores table
    try:
        op.drop_constraint('order_items_store_id_fkey', 'order_items', type_='foreignkey')
        op.drop_column('order_items', 'store_id')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass

    try:
        op.drop_constraint('promotions_store_id_fkey', 'promotions', type_='foreignkey')
        op.drop_column('promotions', 'store_id')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass

    try:
        op.drop_constraint('purchase_history_store_id_fkey', 'purchase_history', type_='foreignkey')
        op.drop_column('purchase_history', 'store_id')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass

    # Drop shopping_lists foreign key constraints and related fields
    try:
        op.drop_constraint('barcode_scan_history_added_to_list_id_fkey', 'barcode_scan_history', type_='foreignkey')
        op.drop_column('barcode_scan_history', 'added_to_list_id')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass

    # Now drop tables if they exist
    try:
        op.drop_index('ix_shopping_lists_id', table_name='shopping_lists')
        op.drop_table('shopping_lists')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass

    try:
        op.drop_index('ix_stores_id', table_name='stores')
        op.drop_index('ix_stores_store_name', table_name='stores')
        op.drop_table('stores')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass

    try:
        op.drop_index('ix_barcode_scan_history_barcode', table_name='barcode_scan_history')
    except (sa.exc.OperationalError, sa.exc.ProgrammingError):
        pass
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip adding back columns to product_images and dropping new columns

    # Create tables first
    op.create_table('stores',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('store_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('contact_info', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='stores_pkey')
    )
    op.create_index('ix_stores_store_name', 'stores', ['store_name'], unique=False)
    op.create_index('ix_stores_id', 'stores', ['id'], unique=False)

    op.create_table('shopping_lists',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('list_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='shopping_lists_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='shopping_lists_pkey')
    )
    op.create_index('ix_shopping_lists_id', 'shopping_lists', ['id'], unique=False)

    # Now add foreign key constraints
    op.add_column('purchase_history', sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('purchase_history_store_id_fkey', 'purchase_history', 'stores', ['store_id'], ['id'])

    op.add_column('promotions', sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('promotions_store_id_fkey', 'promotions', 'stores', ['store_id'], ['id'])

    op.add_column('order_items', sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('order_items_store_id_fkey', 'order_items', 'stores', ['store_id'], ['id'])

    op.add_column('barcode_scan_history', sa.Column('added_to_list_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_index('ix_barcode_scan_history_barcode', 'barcode_scan_history', ['barcode'], unique=False)
    op.create_foreign_key('barcode_scan_history_added_to_list_id_fkey', 'barcode_scan_history', 'shopping_lists', ['added_to_list_id'], ['id'])

    # Drop new tables
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_cards_id'), table_name='cards')
    op.drop_table('cards')
    # ### end Alembic commands ###
